{
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "next/core-web-vitals",
    "next",
    "prettier",
    "eslint-config-prettier",
    "prettier/react"
  ],
  "plugins": ["unused-imports"],
  "parser": "@babel/eslint-parser",
  "env": {
    "browser": false,
    "node": true,
    "es6": true,
    "mocha": false
  },
  "parserOptions": {
    "project": "./tsconfig.eslint.json",
    "sourceType": "module"
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"], // Your TypeScript files extension

      // As mentioned in the comments, you should extend TypeScript plugins here,
      // instead of extending them outside the `overrides`.
      // If you don't want to extend any rules, you don't need an `extends` attribute.
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ],

      "parserOptions": {
        "project": ["./tsconfig.json"] // Specify it only for TypeScript files
      }
    }
  ],
  "ecmaFeatures": {
    "arrowFunctions": true,
    "blockBindings": true,
    "classes": true,
    "defaultParams": true,
    "modules": true,
    "spread": true,
    "globalReturn": true
  },
  "rules": {
    "valid-jsdoc": [
      "error",
      {
        "requireReturn": true,
        "requireReturnType": true,
        "requireParamDescription": true,
        "requireReturnDescription": true,
        "preferType": {
          "String": "string",
          "object": "Object"
        }
      }
    ],
    // "require-jsdoc": [
    //   "warn",
    //   {
    //     "require": {
    //       "FunctionDeclaration": true,
    //       "MethodDefinition": true,
    //       "ClassDeclaration": true
    //     }
    //   }
    // ],
    "no-var": 1,
    "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "no-eval": "error",
    "indent": ["error", 2],
    "quotes": ["error", "single"],
    "no-console": ["warn", { "allow": ["warn", "info"] }],
    "space-before-function-paren": ["error", "never"],
    "padded-blocks": "off",
    "prefer-arrow-callback": [0, { "allowNamedFunctions": true }],
    "func-names": ["error", "never"],
    "import/no-extraneous-dependencies": [
      "error",
      { "bundledDependencies": true, "peerDependencies": true }
    ],
    "no-use-before-define": [
      "error",
      {
        "functions": true,
        "classes": true
      }
    ],
    "max-nested-callbacks": ["error", 5]
  }
}
